version: '3.9'
services:
  tg_bot:
    container_name: expense_accounting
    build:
      context: .
      dockerfile: docker/Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    command: ["sh", "-c", "alembic -c /bot/app/db/alembic.ini upgrade head && python app/main.py"]
    networks:
      - ea-network
    depends_on:
      postgres:
        condition: service_healthy
#      - kafka

  postgres:
    image: postgres:17.0-bookworm
    container_name: postgres_container
    env_file:
      - .env
    environment:
      PGUSER: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      PGHOST: ${POSTGRES_HOST}
      PGPORT: ${POSTGRES_PORT}
      PGDATABASE: ${POSTGRES_DB_NAME}
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/expense_accounting/postgresql/expense_accounting
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

    ports:
      - "5432:5432"
    networks:
      - ea-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 5

#  kafka:
#    image: wurstmeister/kafka
#    container_name: kafka_container
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093
#      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
#      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093
#      KAFKA_LISTENER_NAME_INSIDE: INSIDE
#      KAFKA_LISTENER_PORT: 9093
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    networks:
#      - ea-network
#    depends_on:
#      - zookeeper
#
#  zookeeper:
#    image: wurstmeister/zookeeper
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#    networks:
#      - ea-network

volumes:
  postgres_data:

networks:
  ea-network:
    driver: bridge